# Generated by Django 3.2 on 2021-04-24 16:03

from django.db import migrations, models
import django_mysql.models
import taggit.managers


class Migration(migrations.Migration):

    dependencies = [
        ("taggit", "0003_taggeditem_add_unique_index"),
        ("accounts", "0015_use_dc_locations"),
    ]

    operations = [
        migrations.RemoveIndex(model_name="datacenter", name="name",),
        migrations.RemoveIndex(model_name="hostingprovider", name="archived",),
        migrations.RemoveIndex(model_name="hostingprovider", name="showonwebsite",),
        migrations.RemoveIndex(model_name="hostingprovider", name="name",),
        migrations.AddField(
            model_name="hostingprovider",
            name="services",
            field=taggit.managers.TaggableManager(
                help_text="Click the services that your organisation offers. These will be listed in the green web directory.",
                through="taggit.TaggedItem",
                to="taggit.Tag",
                verbose_name="Services Offered",
            ),
        ),
        migrations.AlterField(
            model_name="datacenter",
            name="model",
            field=models.CharField(
                choices=[
                    ("groeneenergie", "Green Energy"),
                    ("compensatie", "Compensation"),
                    ("mixed", "Mixed"),
                ],
                max_length=255,
            ),
        ),
        migrations.AlterField(
            model_name="datacentercertificate",
            name="mainenergy_type",
            field=models.CharField(
                choices=[
                    ("wind", "Wind"),
                    ("water", "Water"),
                    ("solar", "Solar"),
                    ("mixed", "Mixed"),
                ],
                db_column="mainenergytype",
                max_length=255,
            ),
        ),
        migrations.AlterField(
            model_name="datacentercooling",
            name="cooling",
            field=models.CharField(
                choices=[
                    ("Direct free", "Direct Free"),
                    ("Compressor", "Compressor"),
                    ("Indirect free", "Indirect Free"),
                    ("Water", "Water"),
                    ("Cold Wheel", "Cold Wheel"),
                ],
                max_length=255,
            ),
        ),
        migrations.AlterField(
            model_name="datacentresupportingdocument",
            name="attachment",
            field=models.FileField(
                blank=True,
                help_text="If you have a sustainability report, or bill from a energy provider provider, or similar certificate of supply from a green tariff add it here.",
                upload_to="uploads/",
            ),
        ),
        migrations.AlterField(
            model_name="datacentresupportingdocument",
            name="title",
            field=models.CharField(
                help_text="Describe what you are listing, as you would to a user or customer.",
                max_length=255,
            ),
        ),
        migrations.AlterField(
            model_name="datacentresupportingdocument",
            name="url",
            field=models.URLField(
                blank=True,
                help_text="Alternatively, if you add a link, we'll fetch a copy at the URL you list, so we can point to the version when you listed it",
            ),
        ),
        migrations.AlterField(
            model_name="hostingprovider",
            name="model",
            field=django_mysql.models.EnumField(
                choices=[
                    ("groeneenergie", "Green Energy"),
                    ("compensatie", "Compensation"),
                    ("mixed", "Mixed"),
                ],
                default="compensatie",
            ),
        ),
        migrations.AlterField(
            model_name="hostingprovider",
            name="partner",
            field=models.CharField(
                blank=True,
                choices=[
                    ("None", "None"),
                    ("Partner", "Partner"),
                    ("Dev Partner", "Dev Partner"),
                    ("Certified Gold Partner", "Certified Gold"),
                    ("Certified Partner", "Certified Partner"),
                    ("Gold Partner", "Gold"),
                ],
                default="None",
                max_length=255,
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="hostingprovidercertificate",
            name="mainenergy_type",
            field=models.CharField(
                choices=[
                    ("wind", "Wind"),
                    ("water", "Water"),
                    ("solar", "Solar"),
                    ("mixed", "Mixed"),
                ],
                db_column="mainenergytype",
                max_length=255,
            ),
        ),
        migrations.AlterField(
            model_name="hostingprovidersupportingdocument",
            name="attachment",
            field=models.FileField(
                blank=True,
                help_text="If you have a sustainability report, or bill from a energy provider provider, or similar certificate of supply from a green tariff add it here.",
                upload_to="uploads/",
            ),
        ),
        migrations.AlterField(
            model_name="hostingprovidersupportingdocument",
            name="title",
            field=models.CharField(
                help_text="Describe what you are listing, as you would to a user or customer.",
                max_length=255,
            ),
        ),
        migrations.AlterField(
            model_name="hostingprovidersupportingdocument",
            name="url",
            field=models.URLField(
                blank=True,
                help_text="Alternatively, if you add a link, we'll fetch a copy at the URL you list, so we can point to the version when you listed it",
            ),
        ),
        migrations.AddIndex(
            model_name="datacenter",
            index=models.Index(fields=["name"], name="dc_name"),
        ),
        migrations.AddIndex(
            model_name="hostingprovider",
            index=models.Index(fields=["name"], name="hp_name"),
        ),
        migrations.AddIndex(
            model_name="hostingprovider",
            index=models.Index(fields=["archived"], name="hp_archived"),
        ),
        migrations.AddIndex(
            model_name="hostingprovider",
            index=models.Index(fields=["showonwebsite"], name="hp_showonwebsite"),
        ),
    ]
